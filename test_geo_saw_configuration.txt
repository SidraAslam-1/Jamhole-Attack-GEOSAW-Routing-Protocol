## Simple scenario settings to test GeoSaWScenario.name = geo_sawGroup.router = [GeoSaW]Scenario.endTime = 4500Scenario.nrofHostGroups = 3# Common settings for all groupsGroup.movementModel = RandomWaypointGroup.bufferSize = 50MGroup.waitTime = 0, 0# All nodes have the bluetooth interfaceGroup.nrofInterfaces = 1Group.interface1 = btInterface# Walking speedsGroup.speed = 10, 10# Message TTL of 30 minutesGroup.msgTtl = 30# number of total copies allowedGeoSaW.nrofCopies = 3# Allows every node GeoSaW.binaryMode = 1GeoSaW.angleTd = 30SSSSGeoSaW.wps = 400#GeoSaW.deleteIfBetter = 1 GeoSaW.delete = 1 GeoSaW.copyto1 = 0GeoSaW.oneCopyFN = 1GeoSaW.fnRange = 500Group.nrofHosts = [20]btInterface.transmitRange = 500# group1 (scanning drones)Group1.groupID = SGroup1.nrofHosts = 5Group1.movementModel = ScanGroup1.speed = 15, 20Scan.startCoord = 500, 500Scan.nSteps = 6Scan.height = 1000Scan.width = 400# group2 (delivery drones)Group2.groupID = DGroup2.nrofHosts = 10Group2.speed = 20, 20# group 3 (static base)Group3.nrofHosts = 1Group3.movementModel = StationaryMovementGroup3.nodeLocation = 1500, 3000Group3.groupID = BGroup3.speed = 0,0## Message creation parameters # How many event generatorsEvents.nrof = 1# Class of the first event generatorEvents1.class = MessageEventGenerator# (following settings are specific for the MessageEventGenerator class)# Creation interval in seconds (one new message every 25 to 35 seconds)Events1.interval = 20,30# Message sizes (500kB - 1MB)Events1.size = 250k,250k# range of message source/destination addressesEvents1.hosts = 0,4Events1.tohosts = [9,9]# Message ID prefixEvents1.prefix = MEvents1.time = 0,3600## Movement model settings# seed for movement models' pseudo random number generator (default = 0)# 10 runsMovementModel.rngSeed = 1# World's size for Movement Models without implicit size (width, height; meters)MovementModel.worldSize = 4000, 4000# How long time to move hosts in the world before real simulationMovementModel.warmup = 100## Reports - all report names have to be valid report classes# how many reports to loadReport.nrofReports = 2# length of the warm up period (simulated seconds)Report.warmup = 0# default directory of reports (can be overridden per Report with output setting)Report.reportDir = reports/# Report classes to loadReport.report1 = MessageStatsReport#Report.report2 = BufferOccupancyReport#Report.report2 = MessageReport Report.report2 = LocationSnapshotReportReport.granularity = 1Report.nodes = 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144GUI.EventLogPanel.nrofEvents = 100